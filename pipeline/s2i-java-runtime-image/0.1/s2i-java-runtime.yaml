apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: s2i-java-runtime-image
spec:
  description: |
    S2I Java Runtime Image Build Pipeline
  resources:
    - name: intermediate-image
      type: image
    - name: runtime-image
      type: image
  params:
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: branch-name
      type: string
      description: The git branch to clone.
    - name: RUNTIME_BASE_IMAGE
      description: Base image to build the runtime image
      default: docker.io/openliberty/open-liberty
    - name: SOURCE_ARTIFACT_TO_COPY_1
      description: Source artifact to copy onto the runtime image
      default: /deployments/liberty-rest-app.war
    - name: TARGET_LOCATION_ARTIFACT_1
      description: Destination for the source artifact
      default: /config/apps/liberty-rest-app.war
    - name: SOURCE_ARTIFACT_TO_COPY_2
      description: Source artifact to copy onto the runtime image
      default: /deployments/config
    - name: TARGET_LOCATION_ARTIFACT_2
      description: Destination for the source artifact
      default: /config/
    - name: S2I_SOURCE_DEPLOYMENTS_FILTER
      description: Files we are deploying
      default: *.war
  workspaces:
    - name: intermediate-docker-image-pvc
      description: |
        Intermediate Docker Image will be here
    - name: shared-data
      description: |
        This workspace will receive the cloned git repo and be passed
        to the next Task for the repo's README.md file to be read.
  tasks:
    - name: fetch-repo
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch-name)
    - name: build
      taskRef:
        kind: Task
        name: s2i-java
      workspaces:
        - name: source
          workspace: shared-data
        - name: intermediate-docker-image-pvc
          workspace: intermediate-docker-image-pvc
      params:
        - name: MAVEN_ARGS_APPEND
          value: ""
        - name: S2I_SOURCE_DEPLOYMENTS_FILTER
          value: $(params.S2I_SOURCE_DEPLOYMENTS_FILTER)
      resources:
        outputs:
        - name: intermediate-image
          resource: intermediate-image
      runAfter:
        - fetch-repo
    - name: create-runtime-image
      taskRef:
        kind: Task
        name: create-runtime-image
      workspaces:
        - name: source
          workspace: shared-data
        - name: intermediate-docker-image-pvc
          workspace: intermediate-docker-image-pvc
      params:
        - name: pipelineRunName
          value: $(context.pipelineRun.name)
        - name: pipelineName
          value: $(context.pipeline.name)
        - name: RUNTIME_BASE_IMAGE
          value: $(params.RUNTIME_BASE_IMAGE)
        - name: SOURCE_ARTIFACT_TO_COPY_1
          value: $(params.SOURCE_ARTIFACT_TO_COPY_1)
        - name: TARGET_LOCATION_ARTIFACT_1
          value: $(params.TARGET_LOCATION_ARTIFACT_1)
        - name: SOURCE_ARTIFACT_TO_COPY_2
          value: $(params.SOURCE_ARTIFACT_TO_COPY_2)
        - name: TARGET_LOCATION_ARTIFACT_2
          value: $(params.TARGET_LOCATION_ARTIFACT_2)
      resources:
        inputs:
          - name: intermediate-image
            resource: intermediate-image
        outputs:
          - name: runtime-image
            resource: runtime-image
      runAfter:
        - build
